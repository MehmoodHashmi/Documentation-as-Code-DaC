@startmindmap
title =<i><b><u>Compiler Construction and Design
!theme hacker

*[#darkblue] <i><color #white>Phases of a Compiler
**[#lightblue] <i><color #black><size:12>Lexical Analysis
***[#green] <b><i><color #white><size:12>Tokenization
***[#green] <b><i><color #white><size:12>Regular Expressions
***[#green] <b><i><color #white><size:12>Deterministic Finite Automata (DFA)
***[#green] <b><i><color #white><size:12>Non-Deterministic Finite Automata (NFA)
***[#green] <b><i><color #white><size:12>Lexical Analyser Generator (Lex)
**[#lightblue] <i><color #black><size:12>Syntax Analysis
***[#green] <b><i><color #white><size:12>Parsing
****[#yellow] <i><color #black><size:12><b>Top-Down Parsing
****[#yellow] <i><color #black><size:12><b>Bottom-Up Parsing
*****[#gold] <b><i><color #black><size:12>R Parsing
*****[#gold] <b><i><color #black><size:12>ALR Parsing
*****[#gold] <b><i><color #black><size:12>L Parsing
***[#green] <b><i><color #white><size:12>Context-Free Grammars
***[#green] <b><i><color #white><size:12>Syntax Analyser Generator (Yacc/Bison)
**[#lightblue] <i><color #black><size:12>Semantic Analysis
***[#green] <b><i><color #white><size:12>Type Checking
***[#green] <b><i><color #white><size:12>Symbol Table
***[#green] <b><i><color #white><size:12>Intermediate Code Generation
***[#green] <b><i><color #white><size:12>Error Handling
**[#lightblue] <i><color #black><size:12>Code Generation
***[#green] <b><i><color #white><size:12>Code Optimization
***[#green] <b><i><color #white><size:12>Target Machine Architecture
***[#green] <b><i><color #white><size:12>Code Generation Tools
**[#lightblue] <i><color #black><size:12>Linking and Loading
***[#green] <b><i><color #white><size:12>Object Files
***[#green] <b><i><color #white><size:12>Symbol Resolution
***[#green] <b><i><color #white><size:12>Dynamic Linking
**[#lightblue] <i><color #black><size:12>Compiler Construction Tools
***[#green] <b><i><color #white><size:12>Compiler Compilers
****[#yellow] <i><color #black><size:12><b>Lex
****[#yellow] <i><color #black><size:12><b>Yacc/Bison
***[#green] <b><i><color #white><size:12>LLVM
***[#green] <b><i><color #white><size:12>ANTLR
***[#green] <b><i><color #white><size:12>GCC
***[#green] <b><i><color #white><size:12>Clang

*[#darkblue] <i><color #white>Compiler Design Patterns
**[#lightblue] <i><color #black><size:12>Scannerless Parsing
**[#lightblue] <i><color #black><size:12>Recursive Descent Parsing
**[#lightblue] <i><color #black><size:12>Attribute Grammar
**[#lightblue] <i><color #black><size:12>Abstract Syntax Trees (AST)
**[#lightblue] <i><color #black><size:12>Visitor Pattern
**[#lightblue] <i><color #black><size:12>Interpreter Pattern
**[#lightblue] <i><color #black><size:12>Singleton Pattern
**[#lightblue] <i><color #black><size:12>Factory Pattern
**[#lightblue] <i><color #black><size:12>Builder Pattern
**[#lightblue] <i><color #black><size:12>Facade Pattern
**[#lightblue] <i><color #black><size:12>Command Pattern
**[#lightblue] <i><color #black><size:12>Compiler Optimization Techniques
***[#green] <b><i><color #white><size:12>Constant Folding
***[#green] <b><i><color #white><size:12>Copy Propagation
***[#green] <b><i><color #white><size:12>Dead Code Elimination
***[#green] <b><i><color #white><size:12>Loop Unrolling
***[#green] <b><i><color #white><size:12>Instruction Scheduling
@endmindmap
