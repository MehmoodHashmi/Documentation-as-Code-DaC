@startmindmap
title = Modularity
!theme hacker

* Modularity
** Definition
*** ====<size:14>A design principle that divides the system into smaller parts/modules that can be independently developed and modified.
** Advantages
*** Encourages code reuse
*** Increases maintainability and testability
*** Reduces complexity
*** Promotes parallel development
*** Allows for easier debugging
** Types of Modularity
***[#lightgreen] ====**Logical Modularity**
****[#yellow] ====<size:14>Separation of functionality based on logical components
****[#yellow] ====<size:14>**E.g.** 3-tier architecture, MVC architecture
***[#a] ====**Physical Modularity**
****[#yellow] ====<size:14>Separation of functionality based on physical components
****[#yellow] ====<size:14>**E.g.** Microservices architecture, Containerization
** Modularity Metrics
***[#orange] ====**Cohesion**
****[#yellow] ====<size:14>The degree to which the elements of a module are functionally related
****[#yellow] ====<size:14>**Types:** Coincidental, Logical, Temporal, Procedural, Communicational, Sequential, Functional
***[#gold] ====**Coupling**
****[#yellow] ====<size:14>The degree to which a module depends on other modules
****[#yellow] ====<size:14>**Types:** Content, Common, Control, Stamp, Data, Message, Uncoupled
** Best Practices
*** Encapsulate logic within modules
*** Reduce module coupling
*** Increase module cohesion
***[#white] ====**Follow modular design principles such as SOLID**
***[#pink] Use **well-defined interfaces** for communication between modules
@endmindmap
