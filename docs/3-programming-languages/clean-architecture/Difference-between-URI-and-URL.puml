@startmindmap
<style>
node {
    Padding 12
    Margin 3
    HorizontalAlignment center
    LineColor blue
    LineThickness 3.0
    BackgroundColor gold
    RoundCorner 40
    MaximumWidth 1000
}

rootNode {
    LineStyle 8.0;3.0
    LineColor red
    BackgroundColor white
    LineThickness 1.0
    RoundCorner 0
    Shadowing 1.0
}

leafNode {
    LineColor gold
    RoundCorner 0
    Padding 3
}

arrow {
    LineStyle 4
    LineThickness 1.0
    LineColor green
}
</style>

title =__ Difference between URI and URL__

* **URL Components**\n<img:img.png{scale=.7}>
** **Scheme:** https
*** Defines the protocol used to access the **resource** (e.g. http, https, ftp, etc.)
** **Host:** www.example.com
*** Specifies the domain name or IP address of the server hosting the **resource**
** **Port:** 443
*** Optional component that specifies the port number to use when accessing the **resource**
** **Path:** /resources/file.txt
*** Identifies the specific **resource** being requested on the server
** **Query Parameters:** ?search=example&sort=desc
*** **Optional key-value pairs** that provide additional information for the **resource** request
** **Fragment Identifier:** #section1
*** Identifies a specific section of the **resource** being requested (e.g. a section within an HTML page)



* URI Components
** **Scheme:** http
*** Defines the protocol used to access the **resource** (e.g. http, https, ftp, etc.)
** **Authority:** user:password@www.example.com:8080
*** Combines the host and port components to identify the server hosting the **resource**
** **Path:** /resources/file.txt
*** Identifies the specific **resource** being requested on the server
** **Query:** ?search=example&sort=desc
*** **Optional key-value pairs** that provide additional information for the **resource** request
** **Fragment:** #section1
*** Identifies a specific section of the **resource** being requested (e.g. a section within an HTML page)



* Difference between URI and URL
** **URI**
*** Stands for **"Uniform Resource Identifier"**
*** Identifies a **resource** or a group of resources
***[#yellow] **Consists of a scheme, authority, path, query, and fragment**
** **URL**
*** Stands for **"Uniform Resource Locator"**
*** A **type of URI** that identifies the location of a specific **resource** on a **network**
***[#yellow] **Consists of a scheme, authority, path, query, and fragment**
*** Emphasizes the **network** location of the **resource**


* Difference between URI and URL
** **URI:** mailto:user@example.com
*** Stands for "Uniform Resource Identifier"
*** Identifies a resource or a group of resources
*** Consists of a scheme, authority, path, query, and fragment
** **URL:** https://www.example.com/resources/file.txt
*** A **type of URI** that identifies the location of a specific resource on a **network**
*** Consists of a scheme, authority, path, query, and fragment
*** Emphasizes the **network** location of the resource

* URL and URI Resource
** Definition
*** URL (Uniform Resource Locator) and URI (Uniform Resource Identifier) are used to locate and identify resources on the internet
** URL Structure
*** Scheme (http, https, ftp, etc.)
*** Authority (domain name or IP address)
*** Port number (optional)
*** Path (the resource's location on the server)
*** Query string (optional, contains parameters to be passed to the resource)
*** Fragment identifier (optional, specifies a specific section of the resource)
** URI Types
*** URL: identifies the location of a resource and how to retrieve it
*** URN (Uniform Resource Name): identifies a resource by its name or identifier, but not its location
** Examples
*** URL: https://www.example.com/index.html?q=search#top
**** **Scheme:** https
**** **Authority:** www.example.com
**** **Port:** none specified (default port for https is 443)
**** **Path:** /index.html
**** **Query string:** q=search
**** **Fragment identifier:** top
*** URI: urn:isbn:0451450523
**** **URN:** urn:isbn
**** **Identifier:** 0451450523


* Examples of **Resources**
** Web Pages, Images, and Media Files Hosted on a Website
** APIs for Accessing Data from a Service or Application
** Databases for Managing and Storing Data
** Cloud Storage Systems for Files and Documents
** Web-Based Applications for Providing Services
** IoT Devices and Sensors for Collecting Data
** System-Level Resources for Building and Running Applications
** User Accounts and Authentication Systems for Security
** Hardware Resources such as Servers, Network Infrastructure, and Storage Devices
** Online Courses, Tutorials, and Educational Resources
@endmindmap

