@startmindmap
title =<i><b><u>Library vs. Framework\n<img:images/img.png>

* **[[https://stackoverflow.com/questions/3057526/framework-vs-toolkit-vs-library]]**
!theme hacker





*[#darkblue] <i>Library vs Framework \n<img:images/img_1.png>

**[#lightblue] <i><color #blac><size:14>Definition

***[#green] <b><i><color #white><size:14>Library
****[#yellow] <i><color #black><size:14>Collection of precompiled code and reusable components
****[#yellow] <i><color #black><size:14>Provides specific functionality that can be used by applications
****[#yellow] <i><color #black><size:14>Application controls the flow of execution and uses library functionalities as needed

***[#green] <b><i><color #white><size:14>Framework
****[#yellow] <i><color #black><size:14>Structured set of prewritten code and reusable components
****[#yellow] <i><color #black><size:14>Provides a complete architecture and control flow for developing applications
****[#yellow] <i><color #black><size:14>Application delegates control to the framework and follows its predefined patterns

**[#lightblue] <i><color #blac><size:14>Characteristics

***[#green] <b><i><color #white><size:14>Library

****[#yellow] <b><i><color #black><size:14>Reusability
*****[#gold] <i><color #black><size:14>Provides reusable components for specific functionality
*****[#gold] <i><color #black><size:14>Can be used across different projects and domains

****[#yellow] <b><i><color #black><size:14>Flexibility
*****[#gold] <i><color #black><size:14>Allows applications to have control over the flow of execution
*****[#gold] <i><color #black><size:14>Provides freedom to use specific library functionalities as needed

****[#yellow] <b><i><color #black><size:14>**Focus**
*****[#gold] <i><color #black><size:14>Concentrates on solving specific problems or offering specific features
*****[#gold] <i><color #black><size:14>Typically has a narrow scope and specialized functionality

***[#green] <b><i><color #white><size:14>Framework

****[#yellow] <b><i><color #black><size:14>Architecture
*****[#gold] <i><color #black><size:14>Provides a structured architecture and control flow for developing applications
*****[#gold] <i><color #black><size:14>Guides developers to follow predefined patterns and practices

****[#yellow] <b><i><color #black><size:14>Convention over Configuration
*****[#gold] <i><color #black><size:14>Follows a set of conventions and defaults for consistent application development
*****[#gold] <i><color #black><size:14>Minimizes configuration and reduces development time

****[#yellow] <b><i><color #black><size:14>Extensibility
*****[#gold] <i><color #black><size:14>Allows developers to extend and customize the framework's behavior
*****[#gold] <i><color #black><size:14>Provides hooks and interfaces for plugging in custom code and functionality

**[#lightblue] <i><color #blac><size:14>Examples

***[#green] <b><i><color #white><size:14>Library

****[#yellow] <b><i><color #black><size:14>JSON Processing Library
*****[#gold] <i><color #black><size:14>Provides functionalities for parsing, generating, and manipulating JSON data
*****[#gold] <i><color #black><size:14>Application can use specific methods or classes for JSON processing

****[#yellow] <b><i><color #black><size:14>Logging Library
*****[#gold] <i><color #black><size:14>Offers functionalities for logging messages and handling log levels
*****[#gold] <i><color #black><size:14>Application can utilize logging methods for capturing and managing log information

***[#green] <b><i><color #white><size:14>Framework

****[#yellow] <b><i><color #black><size:14>Django Web Framework
*****[#gold] <i><color #black><size:14>Offers a complete architecture and control flow for web application development
*****[#gold] <i><color #black><size:14>Application follows the MVC pattern and delegates control to the framework

****[#yellow] <b><i><color #black><size:14>Spring Framework
*****[#gold] <i><color #black><size:14>Provides a comprehensive set of tools and features for enterprise Java development
*****[#gold] <i><color #black><size:14>Application follows inversion of control (IoC) and dependency injection principles

@endmindmap
