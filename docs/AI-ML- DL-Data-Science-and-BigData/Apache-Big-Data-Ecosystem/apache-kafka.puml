@startmindmap
title = //**__Apache Kafka__**// \n<img:images/apache-kafka.png>

* **[[https://www.youtube.com/watch?v=0V9SK6jmDPk&ab_channel=ITkFunde]]**
* **[[https://www.youtube.com/watch?v=84HRqqWpqL4&list=PLBb5HFCJVQts9MRueDBfi-K8DB_p_dGLJ&index=2&ab_channel=JavaShastra]]**

*[#crimson] =//**Apache Kafka**// \n<img:images/kafka.png>
** Overview
*** Distributed streaming platform
*** Handles high-volume, real-time data feeds
*** Provides fault-tolerant and scalable data processing
** **Core Concepts** \n<img:images/producer-consumer.png>\n\n<img:images/queue.png>
***[#pink] Topics
**** Categories or feeds of messages in Kafka
**** Partitioned and distributed across **brokers** (are nothing but **kafka server instances**)
**** Can have multiple producers and consumers
*** Producers
**** Send messages to Kafka topics
**** Responsible for data ingestion
*** Consumers
**** Receive messages from Kafka topics
**** Process and analyze data
***[#pink] **Brokers**
****[#pink] **are Kafka server instances**
**** Responsible for storing and managing topics and partitions
***[#pink] Partitions
**** Subdivisions of topics for better scalability
**** Each partition is ordered and has a unique offset
**** Enables parallel processing and load balancing
** Key Features
*** Fault Tolerance
**** Replicates data across multiple brokers
**** Provides automatic failover and data recovery
*** Scalability
**** Horizontal scalability by adding more brokers
**** Supports large-scale data processing
*** High Throughput
**** Optimized for handling high volume and velocity of data
**** Enables real-time data streaming
*** Durability
**** Persists messages on disk
**** Allows for data retention based on configurable policies
** Use Cases
*** Real-time Stream Processing
**** Analyzing and reacting to real-time data streams
**** Enabling near-instantaneous data processing
*** Event Sourcing
**** Capturing and storing all changes as a sequence of events
**** Facilitating auditing, compliance, and historical analysis
*** Log Aggregation
**** Consolidating logs from multiple sources into a central system
**** Simplifying log management and analysis
** Ecosystem
*** Kafka Connect
**** Enables integration with external systems
**** Facilitates data import/export to and from Kafka
*** Kafka Streams
**** Stream processing library for building applications and microservices
**** Enables real-time data processing and transformations
*** Kafka MirrorMaker
**** Replicates Kafka topics across data centers or clusters
**** Facilitates data replication and disaster recovery
**[#pink] Integration with Other Technologies
***[#pink] Apache **Spark**
*** Apache Flink
*** Apache Storm
*** Elasticsearch
*** MongoDB

* <img:images/kafka-cluster.png>

@endmindmap
