@startmindmap
title =__ Event-Driven Architecture__\n<img:img.png>
*:**Event-driven architecture (EDA)** is a software design pattern that enables an organization to detect “events” or important business moments
(such as a transaction, site visit, shopping cart abandonment, etc) and act on them in real time or near real time. This pattern replaces
the **traditional “request/response” architecture** where services would have to wait for a reply before they could move onto the next task.
The flow of event-driven architecture is run by events and it is designed to respond to them or carry out some action in response to an event.;

* Event-Driven Architecture
** Definition
*** A software architecture pattern that involves the production, detection, consumption, and reaction to events.
** Characteristics
*** Asynchronous
*** Decoupled
*** Scalable
*** Resilient
*** Responsive
*** Distributed
*** Event-driven
** Components
*** Event producers
*** Event consumers
*** Event brokers
*** Event processing
*** Event storage
*** Event-driven microservices
*** Event-driven APIs
** Benefits
*** Flexibility
*** Scalability
*** Resilience
*** Modularity
*** Reduced coupling
*** Agility
*** Real-time processing
** Challenges
*** Complexity
*** Event consistency
*** Event routing
*** Data management
*** Error handling
*** Security
*** Testing
*** Deployment and orchestration
** Best practices
*** Choose the right event technology
*** Use event-driven architecture where it makes sense
*** Use a central event schema registry
*** Monitor events in real-time
*** Use an event-driven approach for microservices
*** Use asynchronous communication
*** Plan for failure
@endmindmap
